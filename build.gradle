buildscript {
	ext {
		springBootVersion = '2.0.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'io.goorm'
version '0.0.1'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
	/*
	spring-boot-starter 관련 라이브러리에 대한 설명은 아래의 URL를 참고해주세요.
	For a description of the spring-boot-starter related library, please refer to the following URL.
	spring-boot-starter関連ライブラリについては、次のURLを参照してください。

	https://docs.spring.io/spring-boot/docs/current-SNAPSHOT/reference/htmlsingle/#using-boot-starter 
	*/
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('mysql:mysql-connector-java')
    compile('org.projectlombok:lombok:1.18.18')
    annotationProcessor('org.projectlombok:lombok:1.18.18')
	compile('org.springframework.boot:spring-boot-starter-web')
	testCompile('org.springframework.boot:spring-boot-starter-test')
    compile('org.springframework.boot:spring-boot-starter-security')
	runtime('org.springframework.boot:spring-boot-devtools')
    implementation ('org.springframework.boot:spring-boot-starter-thymeleaf')
	/* Web 
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.boot:spring-boot-starter-hateoas')
	compile('org.springframework.boot:spring-boot-starter-jersey')
	compile('org.springframework.boot:spring-boot-starter-web-services')
	compile('org.springframework.boot:spring-boot-starter-webflux')
	compile('org.springframework.boot:spring-boot-starter-websocket')
	compile('org.springframework.data:spring-data-rest-hal-browser')
	testCompile('io.projectreactor:reactor-test')
	testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
	*/
	
	/* Core
	compile('org.springframework.boot:spring-boot-starter-aop')
	compile('org.springframework.boot:spring-boot-starter-cache')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-validation')
	compile('org.springframework.retry:spring-retry')
	compile('org.springframework.session:spring-session-core')
	runtime('org.springframework.boot:spring-boot-devtools')
	compileOnly('org.springframework.boot:spring-boot-configuration-processor')
	testCompile('org.springframework.security:spring-security-test')
	*/
	
	/* SQL 
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2')
	runtime('com.h2database:h2')
	runtime('com.microsoft.sqlserver:mssql-jdbc')
	runtime('mysql:mysql-connector-java')
	runtime('org.apache.derby:derby')
	runtime('org.hsqldb:hsqldb')
	runtime('org.postgresql:postgresql')
	*/
	
	/* NoSQL 
	compile('org.springframework.boot:spring-boot-starter-data-elasticsearch')
	compile('org.springframework.boot:spring-boot-starter-data-mongodb')
	compile('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
	compile('org.springframework.boot:spring-boot-starter-data-redis')
	compile('org.springframework.boot:spring-boot-starter-data-redis-reactive')
	testCompile('de.flapdoodle.embed:de.flapdoodle.embed.mongo')
	*/
	
	/* Integration
	compile('org.springframework.boot:spring-boot-starter-amqp')
	compile('org.springframework.boot:spring-boot-starter-integration')
	compile('org.apache.kafka:kafka-streams:1.0.1')
	compile('org.springframework.kafka:spring-kafka')
	*/
}